#!/bin/bash

#Laurent Excoffier October 2016
#
# The script will launch several jobs of fastsimcoal2 to estimate
# demographic parameters from the SFS, using a each time using a
# conditional maximization (ECM) of the parameter likelihood
# This should run on any kind of SFS files generated byfastsimcoal
#
# It assumes the following structure of the observed sfs files, and is run from the directory where they reside:
#   			
#   	- *.est file
#   	- *.tpl file
#   	- *.obs files
#   	

modelName=$1

fsc=~/Software/fsc26_linux64/fsc26
jobcount=0
msgs=conOutputs

#-------- Number of different runs per data set ------
numRuns=50
runBase=1 
#-----------------------------

mkdir -p $msgs 2>/dev/null

#-------- Default run values ------
numSims=100000                   #-n command line option  # Changed from 100,000 to 1,000,000. It increases time substantially, but running on the cluster it doesn't really matter that much
numCycles=40                      #-L command line option
minValidSFSEntry=1                #-C command line option

#-------- Ascertainment ------
withAscertainment=0
ascPop=0                          #-a command line option
ascSize=2                         #-A command line option
#-----------------------------
useMonoSites="" 
#useMonoSites="-0"                #-0 command line option
#----------multiSFS------------
echo $modelName
if [[ $modelName =~ "2Pop" ]] || [[ $modelName =~ "3Pop" ]] || [[ $modelName =~ "BK_SW" ]] || [[ $modelName =~ "INV" ]];then
	multiSFS="--multiSFS"
else
	multiSFS=""
fi
#multiSFS="--multiSFS"            #--multiSFS command line option
#-----------------------------

#-------- Generic Name ------
genericName=$modelName
tplGenericName=$modelName
estGenericName=$modelName
#-----------------------------


rm -f ${modelName}_run_IDs.txt

for dirs in $genericName
do
	
	#Check that dirs is a directory
	echo "Main directory : $dirs"
	estFile=$estGenericName.est
	tplFile=$tplGenericName.tpl     
	for (( runsDone=$runBase; runsDone<=$numRuns; runsDone++ ))
	do
		runDir="run$runsDone"
		mkdir $runDir 2>/dev/null
		echo "--------------------------------------------------------------------"
		echo ""
		echo "Currrent file: $subDirs $runDir"
		echo ""
		cd $runDir
		rm -f *
		#Copying necessary files
		#cp ../$fsc .
		cp ../$tplFile .
		cp ../$estFile .
		cp ../*.obs .
		#Renaming files for consistency
		mv $tplFile ${genericName}.tpl 2>/dev/null
		mv $estFile ${genericName}.est 2>/dev/null

		let jobcount=jobcount+1
		jobName=${genericName}${jobcount}.sh

		#Creating bash file on the fly
		(
		echo "#!/bin/bash"
		echo ""
		echo "#SBATCH -N 1"
		echo "#SBATCH -n 1"
		echo "#SBATCH --mem=8000"
		echo "#SBATCH --time=14:00:00"
		echo "#SBATCH -p shared,commons,hoekstra"
		echo "#SBATCH -J $jobName"
		echo "#SBATCH -e $jobName.e"
		echo "#SBATCH -o $jobName.o"
		echo ""
		echo "echo \"Analysis of file $files\""
		echo "#Computing likelihood of the parameters using the ECM-Brent algorithm"
		echo "echo \"\""
		if [ $withAscertainment -eq 1 ] ; then									  
			echo "echo \"$fsc -t ${genericName}.tpl -n $numSims -d -e ${genericName}.est  -M -L $numCycles -a${ascPop} -A${ascSize} -q ${useMonoSites} ${multiSFS}\""
			echo "$fsc -t ${genericName}.tpl -n $numSims -d -e ${genericName}.est -M $stopCrit -l $minNumCycles -L $maxNumCycles -a${ascPop} -A${ascSize} -q ${useMonoSites} ${multiSFS}"                           
		else
			echo "echo \"$fsc -t ${genericName}.tpl -n $numSims -d -e ${genericName}.est -M -L $numCycles -q ${useMonoSites} ${multiSFS}\""
			echo "$fsc -t ${genericName}.tpl -n $numSims -d -e ${genericName}.est -M $stopCrit -L $numCycles -q ${useMonoSites} ${multiSFS}"                           
		fi
		echo ""
		echo "echo \"Job $jobcount complete\""
		echo "#Rscript --vanilla /n/regal/hoekstra_lab/brock/forest_prairie/fsc/ParFileInterpreter.R ${genericName}.par"
		) > $jobName
		chmod +x $jobName
		echo "Bash file $jobName created"
		
		JOBID=$(sbatch ./${jobName})
		echo ${JOBID##* } >> ../${modelName}_run_IDs.txt
		# Insert command for script to check job status
		#./${jobName}
		cd .. #$runDir
		done
sleep 5
echo "Submitting job monitor..."
sbatch --time=24:00:00 --mem=500 -J ${modelName}_job_monitor -e job_monitor.e -o job_monitor.o ~/scripts/job_monitor.slurm ${modelName}_run_IDs.txt
done





